{"version":3,"sources":["components/Form.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onChange","e","console","log","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","TodoItem","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4627361f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Form({ inputText, setInputText, todos, setTodos, setStatus }) {\r\n  const inputTextHandler = (e) => {\r\n    console.log(e);\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    // console.log(typeof e.target.value);\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        value={inputText}\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nfunction TodoItem({text, todo, todos, setTodos}) {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => (\r\n            el.id !== todo.id\r\n        )))\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed,\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className='complete-btn'>\r\n                <i className='fas fa-check'></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className='trash-btn'>\r\n                <i className='fas fa-trash'></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList({todos, setTodos, filteredTodos}) {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n          {filteredTodos.map((todo) => (\r\n            <TodoItem \r\n                key={todo.id} \r\n                text={todo.text} \r\n                todo={todo}\r\n                todos={todos}\r\n                setTodos={setTodos}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //state stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // run once app start\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  //save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      console.log(todoLocal);\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List App</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}